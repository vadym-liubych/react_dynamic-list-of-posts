{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","api/posts.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","PostsList","userId","selectedPostId","useState","posts","setPosts","postId","setPostId","useEffect","queryString","fetch","then","response","json","data","getUserPosts","result","closePostDetails","className","map","post","key","id","title","type","onClick","deleteComment","commentId","a","method","NewCommentForm","name","setName","email","setEmail","body","setBody","handleChange","event","callback","target","value","onSubmit","comment","preventDefault","JSON","stringify","placeholder","onChange","alue","PostDetails","setPost","comments","setComments","isCommentVisible","setIsCommentVisible","getPostDetails","filter","getPostComments","length","App","isSelectedPost","setIsSelectedPost","setUserId","handleUserSelect","isPostIdSelected","selectedId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae97b661.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ userId, selectedPostId }) => {\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then((result) => {\n        setPosts(result);\n      });\n  }, [userId]);\n\n  const openPostDetails = (id) => {\n    selectedPostId(true, id);\n\n    setPostId(id);\n  };\n\n  const closePostDetails = () => {\n    selectedPostId(false, 0);\n\n    setPostId(0);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                { `[User #${post.userId}]:` }\n              </b>\n              {post.title}\n            </div>\n\n            {(postId !== post.id)\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => openPostDetails(post.id)}\n                >\n                  Open\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={closePostDetails}\n                >\n                  Close\n                </button>\n              )\n            }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectedPostId: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId) {\n  const queryString = +userId === 0\n    ? `${BASE_URL}/posts/`\n    : `${BASE_URL}/posts?userId=${userId}`;\n\n  return fetch(queryString)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n","import { BASE_URL } from './api';\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments/`)\n    .then(response => response.json())\n    .then(\n      comments => comments.data.filter(comment => comment.postId === postId),\n    );\n}\n\nexport function addComment(comment) {\n  return fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n  })\n    .then(result => result.json());\n}\n\nexport const deleteComment = async(commentId) => {\n  const response = await fetch(\n    `${BASE_URL}/comments/${commentId}`, {\n      method: 'DELETE',\n    },\n  );\n\n  return response;\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    addComment(newComment);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  const handleChange = (event, callback) => {\n    callback(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={formSubmit}\n      method=\"POST\"\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => handleChange(event, setName)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          alue={email}\n          onChange={event => handleChange(event, setEmail)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => handleChange(event, setBody)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState('');\n  const [comments, setComments] = useState([]);\n  const [isCommentVisible, setIsCommentVisible] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(result => setPost(result));\n  }, [postId]);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(result => setComments(result));\n  }, [postId, comments]);\n\n  const handleButton = () => {\n    setIsCommentVisible(!isCommentVisible);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleButton}\n        >\n          {isCommentVisible\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`\n          }\n        </button>\n\n        {isCommentVisible\n          && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n          )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [postId, setPostId] = useState(0);\n  const [isSelectedPost, setIsSelectedPost] = useState(false);\n  const [userId, setUserId] = useState(0);\n\n  const selectedPostId = (isPostIdSelected, selectedId) => {\n    setIsSelectedPost(isPostIdSelected);\n    setPostId(selectedId);\n  };\n\n  const handleUserSelect = (event) => {\n    const { value } = event.target;\n\n    setUserId(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={event => handleUserSelect(event)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList userId={userId} selectedPostId={selectedPostId} />\n        </div>\n\n        {isSelectedPost && (\n          <div className=\"App__content\">\n            <PostDetails postId={postId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}